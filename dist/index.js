"use strict";$(document).ready(function(){var a=document.querySelectorAll("#menu__item");document.querySelector(".menu").addEventListener("click",function(e){for(var t=0;t<a.length;t++)a[t].classList.remove("menu__item--active")});for(var e=function(n){a[n].addEventListener("click",function(e){if(e.preventDefault(),e.stopPropagation(),a[n].classList.contains("menu__item--active"))a[n].classList.remove("menu__item--active");else{for(var t=0;t<a.length;t++)a[t].classList.remove("menu__item--active");a[n].classList.add("menu__item--active")}})},t=0;t<a.length;t++)e(t);$(function(){$(".scrollarrow").on("click",function(e){e.preventDefault();var t,n,a=$(this),o=a.closest(".slider__container"),i=$(".slider__item",o),r=i.filter(".active");a.hasClass("scrollarrow--right")&&(t=r.next(),n=i.first()),a.hasClass("scrollarrow--left")&&(t=r.prev(),n=i.last()),function(e,t){var n=e.find(".slider__item"),a=n.filter(".active"),o=n.eq(t),i=o.index(),r=e.find(".slider__list");o.length&&r.animate({left:100*-i+"%"},500,function(){a.removeClass("active"),o.addClass("active")})}(o,t.length?t.index():n.index())})});function n(e,t){e.eq(t).addClass("active").siblings().removeClass("active")}function o(e){if(!l){l=!0;var t=function(e){return"".concat(-100*e,"%")}(e);n(r,e),n($(".fixed-menu__item"),e),c.css({transform:"translateY(".concat(t,")")}),setTimeout(function(){l=!1},1300)}}function i(e){var t=r.filter(".active"),n=t.next(),a=t.prev();"next"===e&&n.length&&o(n.index()),"prev"===e&&a.length&&o(a.index())}var r=$(".section"),c=$(".maincontent"),l=!1,s=new MobileDetect(window.navigator.userAgent).mobile();$(document).on({wheel:function(e){var t=e.originalEvent.deltaY;t<0&&i("prev"),0<t&&i("next")},keydown:function(e){var t=e.target.tagName.toLowerCase();if(!("input"===t||"textarea"===t))switch(e.keyCode){case 40:i("next");break;case 38:i("prev")}}}),$("[data-scroll-to]").on("click",function(e){e.preventDefault(),o(parseInt($(e.currentTarget).attr("data-scroll-to")))}),s&&(window.addEventListener("touchmove",function(e){e.preventDefault()},{passive:!1}),$("body").swipe({swipe:function(e,t){var n;"up"===t&&(n="next"),"down"===t&&(n="prev"),i(n)}}));var m=document.querySelectorAll(".team__item");document.querySelector(".team__people").addEventListener("click",function(e){e.preventDefault();for(var t=0;t<m.length;t++)m[t].classList.remove("team__item--active")});var u=function(n){m[n].addEventListener("click",function(e){if(e.preventDefault(),e.stopPropagation(),m[n].classList.contains("team__item--active"))m[n].classList.remove("team__item--active");else{for(var t=0;t<m.length;t++)m[t].classList.remove("team__item--active");m[n].classList.add("team__item--active")}})};for(t=0;t<m.length;t++)u(t);var d=document.querySelector("#menulink"),v=document.querySelector("#fullscreen");d.addEventListener("click",function(){fullscreen.style.right="0"}),$(".hamburger__link").on("click",function(e){fullscreen.style.right="-100%"}),document.querySelector("#exit").addEventListener("click",function(e){e.preventDefault(),v.style.right="-100%"});var f=document.querySelector(".reviews"),p=document.querySelector(".overlay"),y=document.querySelector(".overlay__text");f.addEventListener("click",function(e){var t=e.target;if("BUTTON"===t.tagName){var n=t.previousElementSibling.previousElementSibling.innerHTML+t.previousElementSibling.innerHTML;y.innerHTML=n,p.style.display="block",document.body.style.overflow="hidden"}document.addEventListener("keyup",function(e){"Escape"===e.key&&(p.style.display="none",document.body.style.overflow="inherit")}),document.querySelector(".overlay__exit").addEventListener("click",function(e){e.preventDefault(),p.style.display="none",document.body.style.overflow="inherit"})});var g=document.querySelector(".form__elem"),_=document.querySelector(".btn--send");function k(e){return e.nextElementSibling.textContent=e.validationMessage,e.checkValidity()}g.addEventListener("keydown",function(e){if("phone"==e.target.name||"apartment"==e.target.name||"floor"==e.target.name){var t=!1,n=!1;(0<=e.key||e.key<=9)&&(t=!0),"ArrowLeft"!=e.key&&"ArrowRight"!=e.key&&"Backspace"!=e.key||(n=!0),t||n||e.preventDefault()}}),_.addEventListener("click",function(e){if(e.preventDefault(),function(){var e=!0;k(g.elements.name)||(e=!1);k(g.elements.phone)||(e=!1);k(g.elements.comment)||(e=!1);return e}()){g.elements.apartment.value,g.elements.building.value,g.elements.comment.value,g.elements.floor.value,g.elements.home.value,g.elements.name.value,g.elements.phone.value,g.elements.question1.checked,g.elements.question2.checked,g.elements.question3.checked,g.elements.street.value;var t=new FormData(g);t.append("name",g.elements.name.value),t.append("phone",g.elements.phone.value),t.append("comment",g.elements.comment.value),t.append("to","gi.32@gmail.com");var n=new XMLHttpRequest;n.open("POST","https://webdev-api.loftschool.com/sendmail"),n.send(t),n.responseType="json",n.addEventListener("load",function(){if(n.response.status){var t=document.querySelector(".overlay--modal");t.style.display="block",document.body.style.overflow="hidden",document.querySelector(".overlay__text--modal").innerHTML="Заказ отправлен",g.reset(),document.addEventListener("keyup",function(e){"Escape"===e.key&&(t.style.display="none")}),document.querySelector(".overlay__exit--modal").addEventListener("click",function(e){e.preventDefault(),t.style.display="none",document.body.style.overflow="inherit"})}})}}),ymaps.ready(function(){var e=new ymaps.Map("map",{center:[59.93543728,30.32056584],zoom:12,controls:["zoomControl"],behaviors:["drag"]});myGeoObjects=[],myGeoObjects[0]=new ymaps.Placemark([59.97801011,30.3113368],{},{iconLayout:"default#image",iconImageHref:"images/icons/map-marker.svg",iconImageSize:[46,57],iconImageOffset:[-20,-20]}),myGeoObjects[1]=new ymaps.Placemark([59.94513339,30.38312347],{},{iconLayout:"default#image",iconImageHref:"images/icons/map-marker.svg",iconImageSize:[46,57],iconImageOffset:[-20,-20]}),myGeoObjects[2]=new ymaps.Placemark([59.92042544,30.49717524],{},{iconLayout:"default#image",iconImageHref:"images/icons/map-marker.svg",iconImageSize:[46,57],iconImageOffset:[-20,-40]}),myGeoObjects[3]=new ymaps.Placemark([59.88686609,30.31857879],{},{iconLayout:"default#image",iconImageHref:"images/icons/map-marker.svg",iconImageSize:[46,57],iconImageOffset:[-20,-40]});var t=new ymaps.Clusterer({clusterDisableClickZoom:!0});t.add(myGeoObjects),e.geoObjects.add(t)}),video=document.querySelector(".player"),progress=document.querySelector(".bar");var h=!1;$("#play-pause").add(".player").click(function(){h?(h=!1,$("#play-pause").removeClass("pause"),video.pause()):(h=!0,$("#play-pause").addClass("pause"),video.play())}),$("#volume").on("change",function(){$(".player").prop("volume",this.value)}),$(".sound__img").click(function(e){video.muted?$(".player").prop("muted",!1):$(".player").prop("muted",!0)}),video.ontimeupdate=function(){var e=video.duration,t=video.currentTime;progress.value=100*t/e},progress.onclick=function(){var e=this.offsetWidth,t=event.offsetX;this.value=100*t/e,video.pause(),video.currentTime=video.duration*(t/e),video.play()}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
